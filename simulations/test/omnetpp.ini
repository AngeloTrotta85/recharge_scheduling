[General]
network = Net80211test
#record-eventlog = true
#eventlog-message-detail-pattern = *:(not declaredOn(cMessage) and not declaredOn(cNamedObject) and not declaredOn(cObject))

num-rngs = 3
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 2
#debug-on-errors = true


**.statistic-recording = false
**.scalar-recording = false
**.vector-recording = false

tkenv-plugin-path = ../../../etc/plugins

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 400m
**.constraintAreaMaxZ = 0m

# mobility
**.host*.mobilityType = "VirtualSpringMobility"
**.host*.mobility.initialX = normal(300m, 50m)
**.host*.mobility.initialY = normal(200m, 50m)
**.host*.mobility.initFromDisplayString = false
**.host*.mobility.updateInterval = 100ms
**.host*.mobility.defaultStiffness = 0.4
**.host*.mobility.maxspeed = 20 mps

*.numHosts = 4

# ping app (host[0] pinged by others)
*.host[*].numUdpApps = 1
*.host[*].udpApp[*].typename = "UDPRechargeBasic"

**.udpApp[0].localPort = 100
**.udpApp[0].destPort = 100
#**.udpApp[0].messageLength = 1250B
**.udpApp[0].messageLength = 512B
#**.udpApp[0].sendInterval = 1s
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].destAddresses = "255.255.255.255"
**.udpApp[0].localAddress = ""
**.udpApp[0].receiveBroadcast = true
#**.udpApp[0].startTime = truncnormal(5s, 1s)
**.udpApp[0].startTime = 0s


**.host[*].networkLayerType = "IPv4ExtNetworkLayer"
**.host[*].udpType = "UDPExt"

**.ip.forceBroadcast = true

# nic settings
**.wlan[*].bitrate = 2Mbps

**.wlan[*].mgmt.frameCapacity = 10

**.wlan[*].mac.address = "auto"
**.wlan[*].mac.maxQueueSize = 14
**.wlan[*].mac.rtsThresholdBytes = 3000B
**.wlan[*].mac.retryLimit = 7
**.wlan[*].mac.cwMinData = 7
**.wlan[*].mac.cwMinBroadcast = 31

**.wlan[*].macType = "Ieee80211MacExt"
**.wlan[*].mgmtType = "Ieee80211MgmtAdhocExt"

**.wlan[*].radio.transmitter.power = 100mW
**.wlan[*].radio.receiver.sensitivity = -85dBm
**.wlan[*].radio.receiver.snirThreshold = 4dB

**.wlan[*].radio.receiverType = "Ieee80211ScalarReceiverExt"

**.host[*].battery.nominalCapacity = 1000000J
**.host[*].battery.initialCapacity = 130000J
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.swapHeightFactor = 4J
**.host[*].battery.flightHeight = 25m
**.udpApp[0].flightHeight = 25m

**.udpApp[0].chargingStationNumber = 1
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 100m

[Config TestBase]
description = "TestBase"

repeat = 4

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 400m

*.numHosts = 10

**.host*.mobility.defaultStiffness = 0.5

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = 120000J
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.chargingFactor = 25W
**.host[*].battery.swapHeightFactor = 5J
**.host[*].battery.flightHeight = 25m
**.udpApp[0].flightHeight = 25m
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m

output-vector-file = ${resultdir}/${configname}/${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${runnumber}.sca

[Config TestBaseANALYTICAL]
extends = TestBase
description = "TestBaseANALYTICAL"

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"

# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(20s, 0.02s)

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "${resultdir}/${configname}/${runnumber}.log"
**.udpApp[0].printAnalticalLog = true  


[Config TestBaseROUNDROBIN]
extends = TestBase
description = "TestBaseROUNDROBIN"

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"

# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(20s, 0.02s)

#**.udpApp[0].schedulingType = "ANALYTICAL"
**.udpApp[0].schedulingType = "ROUNDROBIN"    

**.udpApp[0].roundrobinRechargeSize = 2    
**.udpApp[0].analticalLogFile = "${resultdir}/${configname}/${runnumber}.log"
**.udpApp[0].printAnalticalLog = true  



[Config TestBasePROBABILISTIC]
extends = TestBase
description = "TestBasePROBABILISTIC"

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
**.udpApp[0].sendInterval = truncnormal(20s, 0.02s)

**.udpApp[0].useDischargeProbability = false
**.udpApp[0].chargeSlots = 1



[Config TestBaseSTIMULUS]
extends = TestBase
description = "TestBaseSTIMULUS"

*.host[*].udpApp[*].typename = "UDPRechargeStimulus"

**.udpApp[0].stimulusExponent = 1
**.udpApp[0].numRechargeSlotsStimulusZeroNeigh = 3
**.udpApp[0].chargeLengthType = "AVG"
**.udpApp[0].stationANDnodeKNOWN = true
**.udpApp[0].chargeTimeOthersNodeFactor = 0.5
**.udpApp[0].makeLowEnergyFactorCurves = true
**.udpApp[0].useProbabilisticDischarge = false
**.udpApp[0].useQuadraticProbabilisticDischarge = false



[Config TestBaseGAMETHEORY]
extends = TestBase
description = "TestBaseGAMETHEORY"

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].variableC = true
**.udpApp[0].variableP = true
**.udpApp[0].gameTheoryKnowledgeType = "GLOBAL_KNOWLEDGE"
**.udpApp[0].varConstantType = "LINEARINCREASE"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].linearIncreaseFactor = 0.5
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 2.0
**.udpApp[0].temp_factorProbDischarge = 2.0


[Config TestFull]
description = "TestFull"

repeat = 50

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

#**.constraintAreaMaxX = 600m
#**.constraintAreaMaxY = 400m
**.constraintAreaMaxX = 800m
**.constraintAreaMaxY = 800m
**.host*.mobility.initialX = normal(400m, 50m)
**.host*.mobility.initialY = normal(400m, 50m)

**.udpApp[0].chargingStationNumber = ${SN=1}
#*.numHosts = ${NO=5*($SN),10*($SN),20*($SN)}
*.numHosts = ${NO=10}

**.host*.mobility.defaultStiffness = 0.4

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = 130000J
#**.host[*].battery.dischargingFactor = ${DF=20..100 step 40}W
#**.host[*].battery.chargingFactor = ${CF=10,20..($DF) step 40}W
#**.host[*].battery.dischargingFactor = ${DF=25, 50, 100}W
#**.host[*].battery.chargingFactor = ${CF=10,25..($DF) step 25}W
#**.host[*].battery.dischargingFactor = ${DF=100}W
#**.host[*].battery.chargingFactor = ${CF=20}W
**.host[*].battery.dischargingFactor = ${DF=100}W
**.host[*].battery.chargingFactor = ${CF=25}W
**.host[*].battery.swapHeightFactor = ${SW=5}J

#**.host[*].battery.flightHeight = ${FH=0,5,10,20,50}m
#**.udpApp[0].flightHeight = ${FH2=0,5,10,20,50 ! FH}m
**.host[*].battery.flightHeight = ${FH=20}m
**.udpApp[0].flightHeight = ${FH2=20 ! FH}m

#**.host[*].battery.flightHeight = ${FH=20}m
#**.host[*].battery.flightHeight = ${FH=10,20}m
#**.udpApp[0].checkRechargeTimer = ${RT=20,40}s
**.udpApp[0].checkRechargeTimer = ${RT=20}s
**.udpApp[0].sensorRadious = 50m

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${SN}-${DF}-${CF}-${FH}-${RT}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${SN}-${DF}-${CF}-${FH}-${RT}-${runnumber}.sca


[Config TestFullCentrNORECHARGE]
extends = TestFull
description = "TestFullCentrNORECHARGE"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeBasic"

# THE COMMUNICATION IS USELESS IN NO SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s  
 

[Config TestFullCentrANALYTICAL]
extends = TestFull
description = "TestFullCentrANALYTICAL"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"

# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${SN}-${DF}-${CF}-${FH}-${RT}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true 


[Config TestFullCentrROUNDROBIN]
extends = TestFull
description = "TestFullCentrROUNDROBIN"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"

# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

#**.udpApp[0].schedulingType = "ANALYTICAL"
**.udpApp[0].schedulingType = "ROUNDROBIN"    

**.udpApp[0].roundrobinRechargeSize = ${RRS=1,3,5}    
**.udpApp[0].analticalLogFile = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${SN}-${DF}-${CF}-${FH}-${RT}-${RRS}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true  

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${SN}-${DF}-${CF}-${FH}-${RT}-${RRS}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${SN}-${DF}-${CF}-${FH}-${RT}-${RRS}-${runnumber}.sca



[Config TestFullDistrPROBABILISTIC]
extends = TestFull
description = "TestFullDistrPROBABILISTIC"

repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${runnumber}"


**.udpApp[0].useDischargeProbability = ${PT=false}
**.udpApp[0].chargeSlots = ${PRS=1,3,5} 

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${runnumber}.sca



[Config TestFullDistrPROBABILISTICoptim]
extends = TestFull
description = "TestFullDistrPROBABILISTICoptim"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

#**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${runnumber}"


**.udpApp[0].useDischargeProbability = false
**.udpApp[0].chargeSlots = 1
**.udpApp[0].useOptimalRechargeTime = ${OR=true, false}

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${OR}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${OR}-${runnumber}.sca

[Config TestFullDistrSTIMULUS]
extends = TestFull
description = "TestFullDistrSTIMULUS"

*.host[*].udpApp[*].typename = "UDPRechargeStimulus"

**.udpApp[0].stimulusExponent = 2
**.udpApp[0].numRechargeSlotsStimulusZeroNeigh = 3
**.udpApp[0].chargeLengthType = "AVG"
**.udpApp[0].stationANDnodeKNOWN = true
**.udpApp[0].chargeTimeOthersNodeFactor = 0.5
**.udpApp[0].makeLowEnergyFactorCurves = true
#**.udpApp[0].useProbabilisticDischarge = ${PD=false,false,true}
#**.udpApp[0].useQuadraticProbabilisticDischarge = ${QPD=false,true,false ! PD}
**.udpApp[0].useProbabilisticDischarge = ${PD=false}
**.udpApp[0].useQuadraticProbabilisticDischarge = ${QPD=true}
 
output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${SN}-${DF}-${CF}-${FH}-${RT}-${PD}-${QPD}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${SN}-${DF}-${CF}-${FH}-${RT}-${PD}-${QPD}-${runnumber}.sca



[Config TestFullDistrGAMETHEORY]
extends = TestFull
description = "TestFullDistrGAMETHEORY"

repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

#**.udpApp[0].variableC = ${VC=true,false}
#**.udpApp[0].variableP = ${VP=true,false}
#**.udpApp[0].variableC = ${VC=true,true,false}
#**.udpApp[0].variableP = ${VP=true,false,false ! VC}
#**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,LOCAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
#**.udpApp[0].varConstantType = "${VCT=LINEARINCREASE2,LINEARINCREASE4}"
#**.udpApp[0].varConstantType = "${VCT=LINEARINCREASE4}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
#**.udpApp[0].varPConstantType = "LINEAR_P"
#**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
#**.udpApp[0].dischargeProbEnergyToUse = "${DPEU=ENERGYMIN,ENERGYMAX,ENERGYAVG}"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

#**.udpApp[0].useGlobalEstimationInLocal =  ${GEL=false,false,true,false ! KN}
**.udpApp[0].useGlobalEstimationInLocal = true

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

#**.udpApp[0].linearIncreaseFactor = ${LIF=0.5,1.0}
**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
#**.udpApp[0].exponential_dischargeProb_decay = ${EDPD=0.5,1.0,2.0}
**.udpApp[0].temp_factorProbDischarge = 2.0
#**.udpApp[0].useNewGameTheoryDischargeProb = ${NGT=false,true,true}
#**.udpApp[0].varPConstantType = "${VPCT=LINEAR_P,NEW1,NEW2 ! NGT}"
#**.udpApp[0].useNewGameTheoryDischargeProb = ${NGT=false,true,true,true}
#**.udpApp[0].varPConstantType = "${VPCT=LINEAR_P,NEW4,NEW5,NEW6 ! NGT}"
#**.udpApp[0].useNewGameTheoryDischargeProb = true
#**.udpApp[0].varPConstantType = "${VPCT=NEW7,NEW8,NEW9,NEW10}"
**.udpApp[0].varPConstantType = "NEW7"

#**.udpApp[0].useNewGameTheoryDischargeProb = ${UNDP=true, true, false, true, true ! KN}
#**.udpApp[0].useNewGameTheoryDischargeProb = ${UNDP=true, false, false ! KN}
**.udpApp[0].useNewGameTheoryDischargeProb = true
#**.udpApp[0].useUnoPRprob = ${UUPRP=false, true, true ! KN}
**.udpApp[0].useUnoPRprob = false

#**.udpApp[0].sendInterval = truncnormal(${1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${false, true, false ! KN}
#**.host*.mobility.updateInterval = ${0, 100, 0 ! KN}ms
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

#**.udpApp[0].rechargeIsolation = ${RI=true,true,false,true ! KN}
**.udpApp[0].rechargeIsolation = true
##**.udpApp[0].useEnergyAtRechargeInDicharging = ${EAR=true,false}
**.udpApp[0].useEnergyAtRechargeInDicharging = true
#**.udpApp[0].useReverseE = ${URE=true,false}
#**.udpApp[0].useReverseE = false
#**.udpApp[0].useReverseE = ${URE=false, false, true ! KN}
#**.udpApp[0].useReverseE = ${URE=false, false, false ! KN}
**.udpApp[0].useReverseE = false
#**.udpApp[0].coverageUtilityFactor = ${CUP=0.0, 0.05, 0.2}
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${KN}-${runnumber}"


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${KN}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${KN}-${runnumber}.sca

[Config TestFullDistrGAMETHEORY_GLOBAL]
extends = TestFull
description = "TestFullDistrGAMETHEORYGLOBAL"

repeat = 10

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

#**.udpApp[0].variableC = ${VC=true,false}
#**.udpApp[0].variableP = ${VP=true,false}
#**.udpApp[0].variableC = ${VC=true,true,false}
#**.udpApp[0].variableP = ${VP=true,false,false ! VC}
#**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,LOCAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].gameTheoryKnowledgeType = "GLOBAL_KNOWLEDGE"
**.udpApp[0].varConstantType = "${VCT=LINEARINCREASE4,LINEARINCREASE5}"
#**.udpApp[0].varConstantType = "LINEARINCREASE4"
#**.udpApp[0].varPConstantType = "LINEAR_P"
#**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
#**.udpApp[0].dischargeProbEnergyToUse = "${DPEU=ENERGYMIN,ENERGYMAX,ENERGYAVG}"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

#**.udpApp[0].useGlobalEstimationInLocal =  ${GEL=false,false,true,false ! KN}
**.udpApp[0].useGlobalEstimationInLocal = true

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

#**.udpApp[0].linearIncreaseFactor = ${LIF=0.5,1.0}
**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
#**.udpApp[0].exponential_dischargeProb_decay = ${EDPD=0.5,1.0,2.0}
**.udpApp[0].temp_factorProbDischarge = 2.0
#**.udpApp[0].useNewGameTheoryDischargeProb = ${NGT=false,true,true}
#**.udpApp[0].varPConstantType = "${VPCT=LINEAR_P,NEW1,NEW2 ! NGT}"
#**.udpApp[0].useNewGameTheoryDischargeProb = ${NGT=false,true,true,true}
#**.udpApp[0].varPConstantType = "${VPCT=LINEAR_P,NEW4,NEW5,NEW6 ! NGT}"
#**.udpApp[0].useNewGameTheoryDischargeProb = true
#**.udpApp[0].varPConstantType = "${VPCT=NEW7,NEW8,NEW9,NEW10}"
**.udpApp[0].varPConstantType = "NEW7"
#**.udpApp[0].varPConstantType = "${VPCT=NEW7,NEW11,NEW12}"
#**.udpApp[0].varPConstantType = "${VPCT=NEW7,NEW12}"

#**.udpApp[0].useNewGameTheoryDischargeProb = ${UNDP=true, true, false, true, true ! KN}
**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

#**.udpApp[0].sendInterval = truncnormal(${1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${false, true, false ! KN}
#**.host*.mobility.updateInterval = ${0, 100, 0 ! KN}ms
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0ms
#**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = true
#**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

#**.udpApp[0].rechargeIsolation = ${RI=true,true,false,true ! KN}
**.udpApp[0].rechargeIsolation = true
##**.udpApp[0].useEnergyAtRechargeInDicharging = ${EAR=true,false}
**.udpApp[0].useEnergyAtRechargeInDicharging = true
#**.udpApp[0].useReverseE = ${URE=true,false}
**.udpApp[0].useReverseE = false

#**.udpApp[0].coverageUtilityFactor = ${CUP=0.0, 0.05, 0.2}
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = false


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${configname}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${configname}-${runnumber}.sca


[Config TestFullDistrGAMETHEORY_PERSONAL]
extends = TestFull
description = "TestFullDistrGAMETHEORY_PERSONAL"

repeat = 10

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

#**.udpApp[0].variableC = ${VC=true,false}
#**.udpApp[0].variableP = ${VP=true,false}
#**.udpApp[0].variableC = ${VC=true,true,false}
#**.udpApp[0].variableP = ${VP=true,false,false ! VC}
#**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].gameTheoryKnowledgeType = "PERSONAL_KNOWLEDGE"
**.udpApp[0].varConstantType = "LINEARINCREASE2"
#**.udpApp[0].varPConstantType = "LINEAR_P"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

#**.udpApp[0].useGlobalEstimationInLocal =  ${GEL=false,false,true,false ! KN}
**.udpApp[0].useGlobalEstimationInLocal = true
#**.udpApp[0].personalConstantMultiplierC = ${PCM=1..2 step 0.2}
#**.udpApp[0].personalConstantMultiplierC = ${PCM=0,1.5}
#**.udpApp[0].personalConstantMultiplierC = ${PCM=0}

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

#**.udpApp[0].linearIncreaseFactor = ${LIF=0.5,1.0}
**.udpApp[0].linearIncreaseFactor = 1
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
#**.udpApp[0].useNewGameTheoryDischargeProb = ${NGT=false,true,true}
#**.udpApp[0].varPConstantType = "${VPCT=LINEAR_P,NEW1,NEW2 ! NGT}"
#**.udpApp[0].useNewGameTheoryDischargeProb = ${NGT=false,true,true,true}
#**.udpApp[0].varPConstantType = "${VPCT=LINEAR_P,NEW4,NEW5,NEW6 ! NGT}"

**.udpApp[0].useNewGameTheoryDischargeProb = true
#**.udpApp[0].exponential_dischargeProb_decay = 2.0
**.udpApp[0].exponential_dischargeProb_decay = ${EDPD=0.5,1.0,2.0}
#**.udpApp[0].useNewGameTheoryDischargeProb = false
#**.udpApp[0].exponential_dischargeProb_decay = 1.0

**.udpApp[0].coverageUtilityFactor = ${CUP=0.0, 0.05, 0.1, 0.25}

#**.udpApp[0].varPConstantType = "${VPCT=NEW7,NEW8,NEW9,NEW10}"
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0ms


**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].useUnoPRprob = ${UUPR=false, true}

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
#**.udpApp[0].useReverseE = ${URE=true,false}
**.udpApp[0].useReverseE = true
#**.udpApp[0].uTplusMultFactor = ${UTPF=1,2,3}
#**.udpApp[0].uTplusMultFactor = ${UTPF=0.1,0.25,0.5,0.75,1}
**.udpApp[0].uTplusMultFactor = 1


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${runnumber}.sca




[Config TestFullGAMETHEORY2]
extends = TestFull
description = "TestFullGAMETHEORY2"

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

#**.udpApp[0].variableC = ${VC=true,false}
#**.udpApp[0].variableP = ${VP=true,false}
#**.udpApp[0].variableC = ${VC=true,true,false}
#**.udpApp[0].variableP = ${VP=true,false,false ! VC}
**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE"
**.udpApp[0].varPConstantType = "LINEAR_P"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"

#**.udpApp[0].linearIncreaseFactor = ${LIF=0.5,1.0}
**.udpApp[0].linearIncreaseFactor = 1
**.udpApp[0].constDischargeProb = ${CDP=1.0}
**.udpApp[0].exponential_dischargeProb_decay = 2.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].useNewGameTheoryDischargeProb = ${NGT=false,true}


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${NGT}-${SN}-${DF}-${CF}-${FH}-${RT}-${KN}-${CDP}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${NGT}-${SN}-${DF}-${CF}-${FH}-${RT}-${KN}-${CDP}-${runnumber}.sca



[Config TestFullDistrGAMETHEORY3]
extends = TestFull
description = "TestFullDistrGAMETHEORY3"

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

#**.udpApp[0].variableC = ${VC=true,false}
#**.udpApp[0].variableP = ${VP=true,false}
#**.udpApp[0].variableC = ${VC=true,true,false}
#**.udpApp[0].variableP = ${VP=true,false,false ! VC}
**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE2"
#**.udpApp[0].varPConstantType = "LINEAR_P"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

#**.udpApp[0].linearIncreaseFactor = ${LIF=0.5,1.0}
**.udpApp[0].linearIncreaseFactor = 0.5
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 2.0
**.udpApp[0].temp_factorProbDischarge = 2.0
#**.udpApp[0].useNewGameTheoryDischargeProb = ${NGT=false,true,true}
#**.udpApp[0].varPConstantType = "${VPCT=LINEAR_P,NEW1,NEW2 ! NGT}"
**.udpApp[0].useNewGameTheoryDischargeProb = ${NGT=false}
**.udpApp[0].varPConstantType = "${VPCT=LINEAR_P}"

**.udpApp[0].kappaMeno = ${KM=0,1,3}
**.udpApp[0].kappaPiu = 1


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${SN}-${DF}-${CF}-${FH}-${RT}-${KN}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${SN}-${DF}-${CF}-${FH}-${RT}-${KN}-${runnumber}.sca



[Config TestInternalGAMETHEORY]
extends = TestBase
description = "TestInternalGAMETHEORY"

repeat = 3

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

#**.udpApp[0].variableC = ${VC=true,true,false}
#**.udpApp[0].variableP = ${VP=true,false,false ! VC}
#**.udpApp[0].variableC = ${VC=true}
#**.udpApp[0].variableP = ${VP=true}
**.udpApp[0].gameTheoryKnowledgeType = "GLOBAL_KNOWLEDGE"
**.udpApp[0].varConstantType = "LINEARINCREASE"
**.udpApp[0].varPConstantType = "LINEAR_T"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"

#**.udpApp[0].linearIncreaseFactor = ${LIF=0.5,1.0}
**.udpApp[0].linearIncreaseFactor = 0.5
**.udpApp[0].constDischargeProb = 0.5
**.udpApp[0].exponential_dischargeProb_decay = 2.0
**.udpApp[0].temp_factorProbDischarge = 2.0
#**.udpApp[0].useNewGameTheoryDischargeProb = ${NGT=true,false}
**.udpApp[0].useNewGameTheoryDischargeProb = ${NGT=true}



[Config TestOnlyGT]
description = "TestOnlyGT"

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

repeat = 8

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 400m

#**.udpApp[0].chargingStationNumber = ${SN=1}
**.udpApp[0].chargingStationNumber = 1
#*.numHosts = ${NO=5*($SN),10*($SN),20*($SN)}
#*.numHosts = ${NO=5,10,15}
*.numHosts = 10

**.host*.mobility.defaultStiffness = 0.5

**.udpApp[0].rechargeIsolation = ${RI=true,false}

#**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
#**.host[*].battery.initialCapacity = 130000J
#**.host[*].battery.dischargingFactor = ${DF=20..100 step 40}W
#**.host[*].battery.chargingFactor = ${CF=10,20..($DF) step 40}W
#**.host[*].battery.dischargingFactor = ${DF=25, 50, 100}W
#**.host[*].battery.chargingFactor = ${CF=10,25..($DF) step 25}W
#**.host[*].battery.dischargingFactor = ${DF=100}W
#**.host[*].battery.chargingFactor = ${CF=20}W
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.chargingFactor = 25W
**.host[*].battery.swapHeightFactor = 5J
#**.host[*].battery.flightHeight = ${FH=10,20,50}m
**.host[*].battery.flightHeight = 20m
**.udpApp[0].flightHeight = 20m
#**.host[*].battery.flightHeight = ${FH=10,50}m
#**.udpApp[0].checkRechargeTimer = ${RT=20,40}s
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m


#**.udpApp[0].variableC = ${VC=true,false}
#**.udpApp[0].variableP = ${VP=true,false}
#**.udpApp[0].variableC = ${VC=true,true,false}
#**.udpApp[0].variableP = ${VP=true,false,false ! VC}
**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
#**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE2"
#**.udpApp[0].varPConstantType = "LINEAR_P"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)


# THE COMMUNICATION IS USELESS IN GLOBAL_KNOWLEDGE and LOCAL_KNOWLEDGE
**.udpApp[0].sendInterval = truncnormal(${1000, 1, 1000 ! KN}s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = ${false, true, false ! KN}
**.host*.mobility.updateInterval = ${0, 100, 0 ! KN}ms
#**.udpApp[0].sendInterval = truncnormal(${1000, 1 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${false, true ! KN}
#**.host*.mobility.updateInterval = ${0, 100 ! KN}ms
#**.udpApp[0].sendInterval = truncnormal(${SSI=1 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=true ! KN}
#**.host*.mobility.updateInterval = ${UPI=100 ! KN}ms

#**.udpApp[0].linearIncreaseFactor = ${LIF=0.5,1.0}
**.udpApp[0].linearIncreaseFactor = 0.5
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 2.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].useNewGameTheoryDischargeProb = ${NGT=false,true,true,true}
**.udpApp[0].varPConstantType = "${VPCT=LINEAR_P,NEW4,NEW5,NEW6 ! NGT}"
#**.udpApp[0].useNewGameTheoryDischargeProb = ${NGT=false}
#**.udpApp[0].varPConstantType = "${VPCT=LINEAR_P}"

#**.udpApp[0].kappaMeno = ${KM=0, 1}
**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${configname}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${configname}-${runnumber}.sca



[Config TestFullGammaDelta]
description = "TestFullGammaDelta"

repeat = 100

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

#**.constraintAreaMaxX = 600m
#**.constraintAreaMaxY = 400m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.host*.mobility.initialX = normal(300m, 30m)
**.host*.mobility.initialY = normal(300m, 30m)

**.udpApp[0].chargingStationNumber = 1
#*.numHosts = ${NO=5*($SN),10*($SN),20*($SN)}
*.numHosts = 8

**.host*.mobility.defaultStiffness = 0.5

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = 130000J
#**.host[*].battery.dischargingFactor = ${DF=20..100 step 40}W
#**.host[*].battery.chargingFactor = ${CF=10,20..($DF) step 40}W
#**.host[*].battery.dischargingFactor = ${DF=25, 50, 100}W
#**.host[*].battery.chargingFactor = ${CF=10,25..($DF) step 25}W
#**.host[*].battery.dischargingFactor = ${DF=100}W
#**.host[*].battery.chargingFactor = ${CF=20}W
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.chargingFactor = 25W
**.host[*].battery.swapHeightFactor = ${SW=0,2.5,5,7.5,10}J
**.host[*].battery.flightHeight = 20m
**.udpApp[0].flightHeight = 20m
#**.host[*].battery.flightHeight = ${FH=20}m
#**.host[*].battery.flightHeight = ${FH=10,20}m
#**.udpApp[0].checkRechargeTimer = ${RT=20,40}s
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m
**.udpApp[0].sensorAngle = 2.1rad #PI * 2/3

**.host*.mobility.maxspeed = 10 mps

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SW}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SW}-${runnumber}.sca



[Config TestFullGammaDeltaCentrNORECHARGE]
extends = TestFullGammaDelta
description = "TestFullGammaDeltaCentrNORECHARGE"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeBasic"

# THE COMMUNICATION IS USELESS IN NO SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s  
 

[Config TestFullGammaDeltaCentrANALYTICAL]
extends = TestFullGammaDelta
description = "TestFullGammaDeltaCentrANALYTICAL"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"

# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SW}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true 



[Config TestFullGammaDeltaDistrPROBABILISTIC]
extends = TestFullGammaDelta
description = "TestFullGammaDeltaDistrPROBABILISTIC"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].useDischargeProbability = false
**.udpApp[0].chargeSlots = ${PRS=1,2,3} 

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SW}-${KN}-${PRS}-${runnumber}"

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SW}-${KN}-${PRS}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SW}-${KN}-${PRS}-${runnumber}.sca


[Config TestFullGammaDeltaDistrGAMETHEORY]
extends = TestFullGammaDelta
description = "TestFullGammaDeltaDistrGAMETHEORY"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.udpApp[0].useGlobalEstimationInLocal = true

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
**.udpApp[0].useReverseE = false
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SW}-${KN}-${runnumber}"


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SW}-${KN}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SW}-${KN}-${runnumber}.sca




[Config TestFullGammaDelta_SERV]
description = "TestFullGammaDelta_SERV"

repeat = 100


**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

#**.constraintAreaMaxX = 600m
#**.constraintAreaMaxY = 400m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.host*.mobility.initialX = normal(300m, 30m)
**.host*.mobility.initialY = normal(300m, 30m)

**.udpApp[0].chargingStationNumber = 1
#*.numHosts = ${NO=5*($SN),10*($SN),20*($SN)}
*.numHosts = 8

**.host*.mobility.defaultStiffness = 0.5

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = 130000J
#**.host[*].battery.dischargingFactor = ${DF=20..100 step 40}W
#**.host[*].battery.chargingFactor = ${CF=10,20..($DF) step 40}W
#**.host[*].battery.dischargingFactor = ${DF=25, 50, 100}W
#**.host[*].battery.chargingFactor = ${CF=10,25..($DF) step 25}W
#**.host[*].battery.dischargingFactor = ${DF=100}W
#**.host[*].battery.chargingFactor = ${CF=20}W
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.chargingFactor = 25W
**.host[*].battery.swapHeightFactor = ${SW=0,0.5,2.5,5,7.5,10}J
**.host[*].battery.flightHeight = 20m
**.udpApp[0].flightHeight = 20m
#**.host[*].battery.flightHeight = ${FH=20}m
#**.host[*].battery.flightHeight = ${FH=10,20}m
#**.udpApp[0].checkRechargeTimer = ${RT=20,40}s
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m
**.udpApp[0].sensorAngle = 2.1rad #PI * 2/3

**.host*.mobility.maxspeed = 10 mps

output-vector-file = ${resultdir}/${configname}/${SW}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${SW}-${runnumber}.sca



[Config TestFullGammaDeltaCentrNORECHARGE_SERV]
extends = TestFullGammaDelta_SERV
description = "TestFullGammaDeltaCentrNORECHARGE_SERV"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeBasic"

# THE COMMUNICATION IS USELESS IN NO SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s  
 

[Config TestFullGammaDeltaCentrANALYTICAL_SERV]
extends = TestFullGammaDelta_SERV
description = "TestFullGammaDeltaCentrANALYTICAL_SERV"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"

# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "${resultdir}/${configname}/${SW}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true 



[Config TestFullGammaDeltaDistrPROBABILISTIC_SERV]
extends = TestFullGammaDelta_SERV
description = "TestFullGammaDeltaDistrPROBABILISTIC_SERV"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].useDischargeProbability = false
**.udpApp[0].chargeSlots = ${PRS=1} 

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "${resultdir}/${configname}/${SW}-${KN}-${PRS}-${runnumber}"

output-vector-file = ${resultdir}/${configname}/${SW}-${KN}-${PRS}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${SW}-${KN}-${PRS}-${runnumber}.sca


[Config TestFullGammaDeltaDistrGAMETHEORY_SERV]
extends = TestFullGammaDelta_SERV
description = "TestFullGammaDeltaDistrGAMETHEORY_SERV"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.udpApp[0].useGlobalEstimationInLocal = true

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
**.udpApp[0].useReverseE = false
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "${resultdir}/${configname}/${SW}-${KN}-${runnumber}"


output-vector-file = ${resultdir}/${configname}/${SW}-${KN}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${SW}-${KN}-${runnumber}.sca

[Config TestFullGammaDeltaDistrGAMETHEORYbis_SERV]
extends = TestFullGammaDelta_SERV
description = "TestFullGammaDeltaDistrGAMETHEORYbis_SERV"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
**.udpApp[0].tauInside = true
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.udpApp[0].useGlobalEstimationInLocal = true

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
**.udpApp[0].useReverseE = false
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "${resultdir}/${configname}/${SW}-${KN}-${runnumber}"


output-vector-file = ${resultdir}/${configname}/${SW}-${KN}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${SW}-${KN}-${runnumber}.sca


[Config TestFullEinit]
description = "TestFullEinit"

repeat = 50

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

#**.constraintAreaMaxX = 600m
#**.constraintAreaMaxY = 400m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.host*.mobility.initialX = normal(300m, 30m)
**.host*.mobility.initialY = normal(300m, 30m)

**.udpApp[0].chargingStationNumber = 1
#*.numHosts = ${NO=5*($SN),10*($SN),20*($SN)}
*.numHosts = 8

**.host*.mobility.defaultStiffness = 0.5

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = ${IC = 130000}J
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.chargingFactor = 25W
**.host[*].battery.swapHeightFactor = 5J
**.host[*].battery.flightHeight = 20m
**.udpApp[0].flightHeight = 20m
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m
**.udpApp[0].sensorAngle = 2.1rad #PI * 2/3

**.host*.mobility.maxspeed = 10 mps

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${IC}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${IC}-${runnumber}.sca



[Config TestFullEinitCentrNORECHARGE]
extends = TestFullEinit
description = "TestFullEinitCentrNORECHARGE"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeBasic"

**.host[*].battery.initialCapacity = ${IC2 = 50000, 75000, 100000, 125000, 150000}J

# THE COMMUNICATION IS USELESS IN NO SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s  

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${IC2}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${IC2}-${runnumber}.sca
 

[Config TestFullEinitCentrANALYTICAL]
extends = TestFullEinit
description = "TestFullEinitCentrANALYTICAL"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"

**.host[*].battery.initialCapacity = ${IC2 = 50000, 75000, 100000, 125000, 150000}J

# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${IC2}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true 


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${IC2}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${IC2}-${runnumber}.sca




[Config TestFullEinitDistrPROBABILISTIC]
extends = TestFullEinit
description = "TestFullEinitDistrPROBABILISTIC"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].useDischargeProbability = false
#**.udpApp[0].chargeSlots = ${PRS=1,2,3} 
**.udpApp[0].chargeSlots = ${PRS=1}

#**.host[*].battery.initialCapacity = ${IC = 50000, 75000, 100000, 125000, 150000}J
**.host[*].battery.initialCapacity = truncnormal(${IC2 = 50000, 75000, 100000, 125000, 150000}J, 1000J)

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${IC2}-${KN}-${PRS}-${runnumber}"

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${IC2}-${KN}-${PRS}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${IC2}-${KN}-${PRS}-${runnumber}.sca



[Config TestFullEinitDistrGAMETHEORY]
extends = TestFullEinit
description = "TestFullEinitDistrGAMETHEORY"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.udpApp[0].useGlobalEstimationInLocal = true

#**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)
**.host[*].battery.initialCapacity = truncnormal(${IC2 = 50000, 75000, 100000, 125000, 150000}J, 1000J)

**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
**.udpApp[0].useReverseE = false
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${IC2}-${KN}-${runnumber}"


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${IC2}-${KN}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${IC2}-${KN}-${runnumber}.sca



[Config TestFullEinit_SERV]
description = "TestFullEinit_SERV"

repeat = 100

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

#**.constraintAreaMaxX = 600m
#**.constraintAreaMaxY = 400m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.host*.mobility.initialX = normal(300m, 30m)
**.host*.mobility.initialY = normal(300m, 30m)

**.udpApp[0].chargingStationNumber = 1
#*.numHosts = ${NO=5*($SN),10*($SN),20*($SN)}
*.numHosts = 8

**.host*.mobility.defaultStiffness = 0.5

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = ${IC = 130000}J
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.chargingFactor = 25W
**.host[*].battery.swapHeightFactor = 5J
**.host[*].battery.flightHeight = 20m
**.udpApp[0].flightHeight = 20m
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m
**.udpApp[0].sensorAngle = 2.1rad #PI * 2/3

**.host*.mobility.maxspeed = 10 mps

output-vector-file = ${resultdir}/${configname}/${IC}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${IC}-${runnumber}.sca



[Config TestFullEinitCentrNORECHARGE_SERV]
extends = TestFullEinit_SERV
description = "TestFullEinitCentrNORECHARGE_SERV"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeBasic"

**.host[*].battery.initialCapacity = ${IC2 = 50000, 75000, 100000, 125000, 150000}J

# THE COMMUNICATION IS USELESS IN NO SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s  

output-vector-file = ${resultdir}/${configname}/${IC2}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${IC2}-${runnumber}.sca
 

[Config TestFullEinitCentrANALYTICAL_SERV]
extends = TestFullEinit_SERV
description = "TestFullEinitCentrANALYTICAL_SERV"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"

**.host[*].battery.initialCapacity = ${IC2 = 50000, 75000, 100000, 125000, 150000}J

# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "${resultdir}/${configname}/${IC2}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true 


output-vector-file = ${resultdir}/${configname}/${IC2}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${IC2}-${runnumber}.sca




[Config TestFullEinitDistrPROBABILISTIC_SERV]
extends = TestFullEinit_SERV
description = "TestFullEinitDistrPROBABILISTIC_SERV"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].useDischargeProbability = false
#**.udpApp[0].chargeSlots = ${PRS=1,2,3} 
**.udpApp[0].chargeSlots = ${PRS=1}

#**.host[*].battery.initialCapacity = ${IC = 50000, 75000, 100000, 125000, 150000}J
**.host[*].battery.initialCapacity = truncnormal(${IC2 = 50000, 75000, 100000, 125000, 150000}J, 1000J)

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "${resultdir}/${configname}/${IC2}-${KN}-${PRS}-${runnumber}"

output-vector-file = ${resultdir}/${configname}/${IC2}-${KN}-${PRS}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${IC2}-${KN}-${PRS}-${runnumber}.sca



[Config TestFullEinitDistrGAMETHEORY_SERV]
extends = TestFullEinit_SERV
description = "TestFullEinitDistrGAMETHEORY_SERV"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.udpApp[0].useGlobalEstimationInLocal = true

#**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)
**.host[*].battery.initialCapacity = truncnormal(${IC2 = 50000, 75000, 100000, 125000, 150000}J, 1000J)

**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
**.udpApp[0].useReverseE = false
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "${resultdir}/${configname}/${IC2}-${KN}-${runnumber}"


output-vector-file = ${resultdir}/${configname}/${IC2}-${KN}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${IC2}-${KN}-${runnumber}.sca


[Config TestFullH]
description = "TestH"

repeat = 50

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

#**.constraintAreaMaxX = 600m
#**.constraintAreaMaxY = 400m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.host*.mobility.initialX = normal(300m, 30m)
**.host*.mobility.initialY = normal(300m, 30m)

**.udpApp[0].chargingStationNumber = 1
#*.numHosts = ${NO=5*($SN),10*($SN),20*($SN)}
*.numHosts = 8

**.host*.mobility.defaultStiffness = 0.5

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = 130000J
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.chargingFactor = 25W
**.host[*].battery.swapHeightFactor = 5J
**.host[*].battery.flightHeight = ${FH=10,20,30,40,50}m
**.udpApp[0].flightHeight = ${FH2=10,20,30,40,50 ! FH}m
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m
**.udpApp[0].sensorAngle = 2.1rad #PI * 2/3

**.host*.mobility.maxspeed = 10 mps

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${FH}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${FH}-${runnumber}.sca



[Config TestFullHCentrNORECHARGE]
extends = TestFullH
description = "TestFullHCentrNORECHARGE"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeBasic"

# THE COMMUNICATION IS USELESS IN NO SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s  
 

[Config TestFullHCentrANALYTICAL]
extends = TestFullH
description = "TestFullHCentrANALYTICAL"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"


# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${FH}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true 




[Config TestFullHDistrPROBABILISTIC]
extends = TestFullH
description = "TestFullHDistrPROBABILISTIC"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].useDischargeProbability = false
#**.udpApp[0].chargeSlots = ${PRS=1,2,3} 
**.udpApp[0].chargeSlots = ${PRS=1}

#**.host[*].battery.initialCapacity = ${IC = 50000, 75000, 100000, 125000, 150000}J
**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${FH}-${KN}-${PRS}-${runnumber}"

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${FH}-${KN}-${PRS}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${FH}-${KN}-${PRS}-${runnumber}.sca



[Config TestFullHDistrGAMETHEORY]
extends = TestFullH
description = "TestFullHDistrGAMETHEORY"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.udpApp[0].useGlobalEstimationInLocal = true

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)
#**.host[*].battery.initialCapacity = truncnormal(${IC2 = 50000, 75000, 100000, 125000, 150000}J, 1000J)

**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
**.udpApp[0].useReverseE = false
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${FH}-${KN}-${runnumber}"


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${FH}-${KN}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${FH}-${KN}-${runnumber}.sca




[Config TestFullH_SERV]
description = "TestH_SERV"

repeat = 100

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

#**.constraintAreaMaxX = 600m
#**.constraintAreaMaxY = 400m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.host*.mobility.initialX = normal(300m, 30m)
**.host*.mobility.initialY = normal(300m, 30m)

**.udpApp[0].chargingStationNumber = 1
#*.numHosts = ${NO=5*($SN),10*($SN),20*($SN)}
*.numHosts = 8

**.host*.mobility.defaultStiffness = 0.5

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = 130000J
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.chargingFactor = 25W
**.host[*].battery.swapHeightFactor = 5J
**.host[*].battery.flightHeight = ${FH=10,20,30,40,50}m
**.udpApp[0].flightHeight = ${FH2=10,20,30,40,50 ! FH}m
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m
**.udpApp[0].sensorAngle = 2.1rad #PI * 2/3

**.host*.mobility.maxspeed = 10 mps

output-vector-file = ${resultdir}/${configname}/${FH}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${FH}-${runnumber}.sca



[Config TestFullHCentrNORECHARGE_SERV]
extends = TestFullH_SERV
description = "TestFullHCentrNORECHARGE_SERV"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeBasic"

# THE COMMUNICATION IS USELESS IN NO SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s  
 

[Config TestFullHCentrANALYTICAL_SERV]
extends = TestFullH_SERV
description = "TestFullHCentrANALYTICAL_SERV"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"


# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "${resultdir}/${configname}/${FH}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true 




[Config TestFullHDistrPROBABILISTIC_SERV]
extends = TestFullH_SERV
description = "TestFullHDistrPROBABILISTIC_SERV"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].useDischargeProbability = false
#**.udpApp[0].chargeSlots = ${PRS=1,2,3} 
**.udpApp[0].chargeSlots = ${PRS=1}

#**.host[*].battery.initialCapacity = ${IC = 50000, 75000, 100000, 125000, 150000}J
**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "${resultdir}/${configname}/${FH}-${KN}-${PRS}-${runnumber}"

output-vector-file = ${resultdir}/${configname}/${FH}-${KN}-${PRS}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${FH}-${KN}-${PRS}-${runnumber}.sca



[Config TestFullHDistrGAMETHEORY_SERV]
extends = TestFullH_SERV
description = "TestFullHDistrGAMETHEORY_SERV"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.udpApp[0].useGlobalEstimationInLocal = true

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)
#**.host[*].battery.initialCapacity = truncnormal(${IC2 = 50000, 75000, 100000, 125000, 150000}J, 1000J)

**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
**.udpApp[0].useReverseE = false
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "${resultdir}/${configname}/${FH}-${KN}-${runnumber}"


output-vector-file = ${resultdir}/${configname}/${FH}-${KN}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${FH}-${KN}-${runnumber}.sca




[Config TestFullNumUav]
description = "TestFullNumUav"

repeat = 50

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

#**.constraintAreaMaxX = 600m
#**.constraintAreaMaxY = 400m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.host*.mobility.initialX = normal(300m, 30m)
**.host*.mobility.initialY = normal(300m, 30m)

**.udpApp[0].chargingStationNumber = 1
*.numHosts = ${NO=4,6,8,10,12,14}
#*.numHosts = 10

**.host*.mobility.defaultStiffness = 0.5

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = 130000J
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.chargingFactor = 25W
**.host[*].battery.swapHeightFactor = 5J
**.host[*].battery.flightHeight = 20m
**.udpApp[0].flightHeight = 20m
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m
**.udpApp[0].sensorAngle = 2.1rad #PI * 2/3

**.host*.mobility.maxspeed = 10 mps

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${runnumber}.sca



[Config TestFullNumUavCentrNORECHARGE]
extends = TestFullNumUav
description = "TestFullNumUavCentrNORECHARGE"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeBasic"

# THE COMMUNICATION IS USELESS IN NO SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s  
 

[Config TestFullNumUavCentrANALYTICAL]
extends = TestFullNumUav
description = "TestFullNumUavCentrANALYTICAL"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"


# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true 




[Config TestFullNumUavDistrPROBABILISTIC]
extends = TestFullNumUav
description = "TestFullNumUavDistrPROBABILISTIC"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].useDischargeProbability = false
#**.udpApp[0].chargeSlots = ${PRS=1,2,3} 
**.udpApp[0].chargeSlots = ${PRS=1}

#**.host[*].battery.initialCapacity = ${IC = 50000, 75000, 100000, 125000, 150000}J
**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${KN}-${PRS}-${runnumber}"

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${KN}-${PRS}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${KN}-${PRS}-${runnumber}.sca



[Config TestFullNumUavDistrGAMETHEORY]
extends = TestFullNumUav
description = "TestFullNumUavDistrGAMETHEORY"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.udpApp[0].useGlobalEstimationInLocal = true

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)
#**.host[*].battery.initialCapacity = truncnormal(${IC2 = 50000, 75000, 100000, 125000, 150000}J, 1000J)

**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
**.udpApp[0].useReverseE = false
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${KN}-${runnumber}"


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${KN}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${NO}-${KN}-${runnumber}.sca








[Config TestFullNumUav_SERV]
description = "TestFullNumUav_SERV"

repeat = 100

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

#**.constraintAreaMaxX = 600m
#**.constraintAreaMaxY = 400m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.host*.mobility.initialX = normal(300m, 30m)
**.host*.mobility.initialY = normal(300m, 30m)

**.udpApp[0].chargingStationNumber = 1
*.numHosts = ${NO=4,6,8,10,12,14}
#*.numHosts = 10

**.host*.mobility.defaultStiffness = 0.5

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = 130000J
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.chargingFactor = 25W
**.host[*].battery.swapHeightFactor = 5J
**.host[*].battery.flightHeight = 20m
**.udpApp[0].flightHeight = 20m
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m
**.udpApp[0].sensorAngle = 2.1rad #PI * 2/3

**.host*.mobility.maxspeed = 10 mps

output-vector-file = ${resultdir}/${configname}/${NO}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${NO}-${runnumber}.sca



[Config TestFullNumUavCentrNORECHARGE_SERV]
extends = TestFullNumUav_SERV
description = "TestFullNumUavCentrNORECHARGE_SERV"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeBasic"

# THE COMMUNICATION IS USELESS IN NO SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s  
 

[Config TestFullNumUavCentrANALYTICAL_SERV]
extends = TestFullNumUav_SERV
description = "TestFullNumUavCentrANALYTICAL_SERV"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"


# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "${resultdir}/${configname}/${NO}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true 




[Config TestFullNumUavDistrPROBABILISTIC_SERV]
extends = TestFullNumUav_SERV
description = "TestFullNumUavDistrPROBABILISTIC_SERV"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].useDischargeProbability = false
#**.udpApp[0].chargeSlots = ${PRS=1,2,3} 
**.udpApp[0].chargeSlots = ${PRS=1}

#**.host[*].battery.initialCapacity = ${IC = 50000, 75000, 100000, 125000, 150000}J
**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "${resultdir}/${configname}/${NO}-${KN}-${PRS}-${runnumber}"

output-vector-file = ${resultdir}/${configname}/${NO}-${KN}-${PRS}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${NO}-${KN}-${PRS}-${runnumber}.sca



[Config TestFullNumUavDistrGAMETHEORY_SERV]
extends = TestFullNumUav_SERV
description = "TestFullNumUavDistrGAMETHEORY_SERV"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.udpApp[0].useGlobalEstimationInLocal = true

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)
#**.host[*].battery.initialCapacity = truncnormal(${IC2 = 50000, 75000, 100000, 125000, 150000}J, 1000J)

**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
**.udpApp[0].useReverseE = false
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "${resultdir}/${configname}/${NO}-${KN}-${runnumber}"


output-vector-file = ${resultdir}/${configname}/${NO}-${KN}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${NO}-${KN}-${runnumber}.sca





[Config TestFullBeaconingEnergy]
description = "TestFullBeaconingEnergy"

repeat = 50

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

#**.constraintAreaMaxX = 600m
#**.constraintAreaMaxY = 400m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.host*.mobility.initialX = normal(300m, 30m)
**.host*.mobility.initialY = normal(300m, 30m)

**.udpApp[0].chargingStationNumber = 1
*.numHosts = 8
#*.numHosts = 10

**.host*.mobility.defaultStiffness = 0.5

#**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = 130000J
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.chargingFactor = 25W
**.host[*].battery.swapHeightFactor = 5J
**.host[*].battery.flightHeight = 20m
**.udpApp[0].flightHeight = 20m
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m
**.udpApp[0].sensorAngle = 2.1rad #PI * 2/3

**.udpApp[0].sendDifferentMessages = true
**.udpApp[0].positionMessageTimer = truncnormal(1s, 0.02s)
**.udpApp[0].sendInterval = truncnormal(${SI=1,10,20,30}s, 0.02s)

**.host*.mobility.maxspeed = 10 mps

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${runnumber}.sca



[Config TestFullBeaconingEnergyCentrNORECHARGE]
extends = TestFullBeaconingEnergy
description = "TestFullBeaconingEnergyCentrNORECHARGE"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeBasic"

# THE COMMUNICATION IS USELESS IN NO SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s  
 

[Config TestFullBeaconingEnergyCentrANALYTICAL]
extends = TestFullBeaconingEnergy
description = "TestFullBeaconingEnergyCentrANALYTICAL"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"


# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true 



[Config TestFullBeaconingEnergyDistrPROBABILISTIC]
extends = TestFullBeaconingEnergy
description = "TestFullBeaconingEnergyDistrPROBABILISTIC"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
#**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].useDischargeProbability = false
#**.udpApp[0].chargeSlots = ${PRS=1,2,3} 
**.udpApp[0].chargeSlots = ${PRS=1}

#**.host[*].battery.initialCapacity = ${IC = 50000, 75000, 100000, 125000, 150000}J
**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${KN}-${PRS}-${runnumber}"

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${KN}-${PRS}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${KN}-${PRS}-${runnumber}.sca



[Config TestFullBeaconingEnergyDistrGAMETHEORY]
extends = TestFullBeaconingEnergy
description = "TestFullBeaconingEnergyDistrGAMETHEORY"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.udpApp[0].useGlobalEstimationInLocal = true

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)
#**.host[*].battery.initialCapacity = truncnormal(${IC2 = 50000, 75000, 100000, 125000, 150000}J, 1000J)

**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

#**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
**.udpApp[0].useReverseE = false
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${KN}-${runnumber}"


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${KN}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${KN}-${runnumber}.sca








[Config TestFullBeaconingEnergy_SERV]
description = "TestFullBeaconingEnergy_SERV"

repeat = 100

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

#**.constraintAreaMaxX = 600m
#**.constraintAreaMaxY = 400m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.host*.mobility.initialX = normal(300m, 30m)
**.host*.mobility.initialY = normal(300m, 30m)

**.udpApp[0].chargingStationNumber = 1
*.numHosts = 8
#*.numHosts = 10

**.host*.mobility.defaultStiffness = 0.5

#**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = 130000J
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.chargingFactor = 25W
**.host[*].battery.swapHeightFactor = 5J
**.host[*].battery.flightHeight = 20m
**.udpApp[0].flightHeight = 20m
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m
**.udpApp[0].sensorAngle = 2.1rad #PI * 2/3

**.udpApp[0].sendDifferentMessages = true
**.udpApp[0].positionMessageTimer = truncnormal(1s, 0.02s)
**.udpApp[0].sendInterval = truncnormal(${SI=1,10,20,30}s, 0.02s)

**.host*.mobility.maxspeed = 10 mps

output-vector-file = ${resultdir}/${configname}/${SI}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${SI}-${runnumber}.sca



[Config TestFullBeaconingEnergyCentrNORECHARGE_SERV]
extends = TestFullBeaconingEnergy_SERV
description = "TestFullBeaconingEnergyCentrNORECHARGE_SERV"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeBasic"

# THE COMMUNICATION IS USELESS IN NO SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s  
 

[Config TestFullBeaconingEnergyCentrANALYTICAL_SERV]
extends = TestFullBeaconingEnergy_SERV
description = "TestFullBeaconingEnergyCentrANALYTICAL_SERV"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"


# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "${resultdir}/${configname}/${SI}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true 



[Config TestFullBeaconingEnergyDistrPROBABILISTIC_SERV]
extends = TestFullBeaconingEnergy_SERV
description = "TestFullBeaconingEnergyDistrPROBABILISTIC_SERV"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
#**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].useDischargeProbability = false
#**.udpApp[0].chargeSlots = ${PRS=1,2,3} 
**.udpApp[0].chargeSlots = ${PRS=1}

#**.host[*].battery.initialCapacity = ${IC = 50000, 75000, 100000, 125000, 150000}J
**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "${resultdir}/${configname}/${SI}-${KN}-${PRS}-${runnumber}"

output-vector-file = ${resultdir}/${configname}/${SI}-${KN}-${PRS}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${SI}-${KN}-${PRS}-${runnumber}.sca



[Config TestFullBeaconingEnergyDistrGAMETHEORY_SERV]
extends = TestFullBeaconingEnergy_SERV
description = "TestFullBeaconingEnergyDistrGAMETHEORY_SERV"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.udpApp[0].useGlobalEstimationInLocal = true

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)
#**.host[*].battery.initialCapacity = truncnormal(${IC2 = 50000, 75000, 100000, 125000, 150000}J, 1000J)

**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

#**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
**.udpApp[0].useReverseE = false
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "${resultdir}/${configname}/${SI}-${KN}-${runnumber}"


output-vector-file = ${resultdir}/${configname}/${SI}-${KN}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${SI}-${KN}-${runnumber}.sca






[Config TestFullBeaconingPosition]
description = "TestFullBeaconingPosition"

repeat = 50

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

#**.constraintAreaMaxX = 600m
#**.constraintAreaMaxY = 400m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.host*.mobility.initialX = normal(300m, 30m)
**.host*.mobility.initialY = normal(300m, 30m)

**.udpApp[0].chargingStationNumber = 1
*.numHosts = 8
#*.numHosts = 10

**.host*.mobility.defaultStiffness = 0.5

#**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = 130000J
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.chargingFactor = 25W
**.host[*].battery.swapHeightFactor = 5J
**.host[*].battery.flightHeight = 20m
**.udpApp[0].flightHeight = 20m
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m
**.udpApp[0].sensorAngle = 2.1rad #PI * 2/3

**.udpApp[0].sendDifferentMessages = true
**.udpApp[0].positionMessageTimer = truncnormal(${SI=1,3,5,7,9}s, 0.02s)
#**.udpApp[0].sendInterval = truncnormal(${SI=1,10,20,30}s, 0.02s)
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)

**.host*.mobility.maxspeed = 10 mps

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${runnumber}.sca



[Config TestFullBeaconingPositionCentrNORECHARGE]
extends = TestFullBeaconingPosition
description = "TestFullBeaconingPositionCentrNORECHARGE"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeBasic"

# THE COMMUNICATION IS USELESS IN NO SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s  
 

[Config TestFullBeaconingPositionCentrANALYTICAL]
extends = TestFullBeaconingPosition
description = "TestFullBeaconingPositionCentrANALYTICAL"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"


# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true 



[Config TestFullBeaconingPositionDistrPROBABILISTIC]
extends = TestFullBeaconingPosition
description = "TestFullBeaconingPositionDistrPROBABILISTIC"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
#**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].useDischargeProbability = false
#**.udpApp[0].chargeSlots = ${PRS=1,2,3} 
**.udpApp[0].chargeSlots = ${PRS=1}

#**.host[*].battery.initialCapacity = ${IC = 50000, 75000, 100000, 125000, 150000}J
**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${KN}-${PRS}-${runnumber}"

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${KN}-${PRS}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${KN}-${PRS}-${runnumber}.sca



[Config TestFullBeaconingPositionDistrGAMETHEORY]
extends = TestFullBeaconingPosition
description = "TestFullBeaconingPositionDistrGAMETHEORY"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.udpApp[0].useGlobalEstimationInLocal = true

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)
#**.host[*].battery.initialCapacity = truncnormal(${IC2 = 50000, 75000, 100000, 125000, 150000}J, 1000J)

**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

#**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
**.udpApp[0].useReverseE = false
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${KN}-${runnumber}"


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${KN}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${SI}-${KN}-${runnumber}.sca








[Config TestFullBeaconingPosition_SERV]
description = "TestFullBeaconingPosition_SERV"

repeat = 100

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

#**.constraintAreaMaxX = 600m
#**.constraintAreaMaxY = 400m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.host*.mobility.initialX = normal(300m, 30m)
**.host*.mobility.initialY = normal(300m, 30m)

**.udpApp[0].chargingStationNumber = 1
*.numHosts = 8
#*.numHosts = 10

**.host*.mobility.defaultStiffness = 0.5

#**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = 130000J
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.chargingFactor = 25W
**.host[*].battery.swapHeightFactor = 5J
**.host[*].battery.flightHeight = 20m
**.udpApp[0].flightHeight = 20m
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m
**.udpApp[0].sensorAngle = 2.1rad #PI * 2/3

**.udpApp[0].sendDifferentMessages = true
**.udpApp[0].positionMessageTimer = truncnormal(${SI=1,3,5,7,9}s, 0.02s)
#**.udpApp[0].sendInterval = truncnormal(${SI=1,10,20,30}s, 0.02s)
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)

**.host*.mobility.maxspeed = 10 mps

output-vector-file = ${resultdir}/${configname}/${SI}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${SI}-${runnumber}.sca



[Config TestFullBeaconingPositionCentrNORECHARGE_SERV]
extends = TestFullBeaconingPosition_SERV
description = "TestFullBeaconingPositionCentrNORECHARGE_SERV"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeBasic"

# THE COMMUNICATION IS USELESS IN NO SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s  
 

[Config TestFullBeaconingPositionCentrANALYTICAL_SERV]
extends = TestFullBeaconingPosition_SERV
description = "TestFullBeaconingPositionCentrANALYTICAL_SERV"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"


# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "${resultdir}/${configname}/${SI}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true 



[Config TestFullBeaconingPositionDistrPROBABILISTIC_SERV]
extends = TestFullBeaconingPosition_SERV
description = "TestFullBeaconingPositionDistrPROBABILISTIC_SERV"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
#**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].useDischargeProbability = false
#**.udpApp[0].chargeSlots = ${PRS=1,2,3} 
**.udpApp[0].chargeSlots = ${PRS=1}

#**.host[*].battery.initialCapacity = ${IC = 50000, 75000, 100000, 125000, 150000}J
**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "${resultdir}/${configname}/${SI}-${KN}-${PRS}-${runnumber}"

output-vector-file = ${resultdir}/${configname}/${SI}-${KN}-${PRS}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${SI}-${KN}-${PRS}-${runnumber}.sca



[Config TestFullBeaconingPositionDistrGAMETHEORY_SERV]
extends = TestFullBeaconingPosition_SERV
description = "TestFullBeaconingPositionDistrGAMETHEORY_SERV"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.udpApp[0].useGlobalEstimationInLocal = true

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)
#**.host[*].battery.initialCapacity = truncnormal(${IC2 = 50000, 75000, 100000, 125000, 150000}J, 1000J)

**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

#**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
**.udpApp[0].useReverseE = false
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "${resultdir}/${configname}/${SI}-${KN}-${runnumber}"


output-vector-file = ${resultdir}/${configname}/${SI}-${KN}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${SI}-${KN}-${runnumber}.sca








[Config TestFullAlphaBeta]
description = "TestFullAlphaBeta"

repeat = 50

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

#**.constraintAreaMaxX = 600m
#**.constraintAreaMaxY = 400m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.host*.mobility.initialX = normal(300m, 30m)
**.host*.mobility.initialY = normal(300m, 30m)

**.udpApp[0].chargingStationNumber = 1
*.numHosts = 8
#*.numHosts = 10

**.host*.mobility.defaultStiffness = 0.5

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = 130000J
**.host[*].battery.dischargingFactor = ${AL=60,80,100,120,140}W
**.host[*].battery.chargingFactor = ${BE=20..$AL step 20}W
**.host[*].battery.swapHeightFactor = 5J
**.host[*].battery.flightHeight = 20m
**.udpApp[0].flightHeight = 20m
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m
**.udpApp[0].sensorAngle = 2.1rad #PI * 2/3

**.host*.mobility.maxspeed = 10 mps

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${AL}-${BE}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${AL}-${BE}-${runnumber}.sca



[Config TestFullAlphaBetaCentrNORECHARGE]
extends = TestFullAlphaBeta
description = "TestFullAlphaBetaCentrNORECHARGE"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeBasic"

# THE COMMUNICATION IS USELESS IN NO SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s  
 

[Config TestFullAlphaBetaCentrANALYTICAL]
extends = TestFullAlphaBeta
description = "TestFullAlphaBetaCentrANALYTICAL"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"


# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${AL}-${BE}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true 




[Config TestFullAlphaBetaDistrPROBABILISTIC]
extends = TestFullAlphaBeta
description = "TestFullAlphaBetaDistrPROBABILISTIC"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].useDischargeProbability = false
#**.udpApp[0].chargeSlots = ${PRS=1,2,3} 
**.udpApp[0].chargeSlots = ${PRS=1}

#**.host[*].battery.initialCapacity = ${IC = 50000, 75000, 100000, 125000, 150000}J
**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${AL}-${BE}-${KN}-${PRS}-${runnumber}"

output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${AL}-${BE}-${KN}-${PRS}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${AL}-${BE}-${KN}-${PRS}-${runnumber}.sca



[Config TestFullAlphaBetaDistrGAMETHEORY]
extends = TestFullAlphaBeta
description = "TestFullAlphaBetaDistrGAMETHEORY"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.udpApp[0].useGlobalEstimationInLocal = true

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)
#**.host[*].battery.initialCapacity = truncnormal(${IC2 = 50000, 75000, 100000, 125000, 150000}J, 1000J)

**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
**.udpApp[0].useReverseE = false
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "/media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${AL}-${BE}-${KN}-${runnumber}"


output-vector-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${AL}-${BE}-${KN}-${runnumber}.vec
output-scalar-file = /media/angelo/BigLinux/Documents/OmnetSimulations/recharge_scheduler/${configname}/${AL}-${BE}-${KN}-${runnumber}.sca








[Config TestFullAlphaBeta_SERV]
description = "TestFullAlphaBeta_SERV"

repeat = 100

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

#**.constraintAreaMaxX = 600m
#**.constraintAreaMaxY = 400m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.host*.mobility.initialX = normal(300m, 30m)
**.host*.mobility.initialY = normal(300m, 30m)

**.udpApp[0].chargingStationNumber = 1
*.numHosts = 8
#*.numHosts = 10

**.host*.mobility.defaultStiffness = 0.5

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = 130000J
**.host[*].battery.dischargingFactor = ${AL=60,80,100,120,140}W
**.host[*].battery.chargingFactor = ${BE=20..$AL step 20}W
**.host[*].battery.swapHeightFactor = 5J
**.host[*].battery.flightHeight = 20m
**.udpApp[0].flightHeight = 20m
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].sensorRadious = 50m
**.udpApp[0].sensorAngle = 2.1rad #PI * 2/3

**.host*.mobility.maxspeed = 10 mps

output-vector-file = ${resultdir}/${configname}/${AL}-${BE}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${AL}-${BE}-${runnumber}.sca



[Config TestFullAlphaBetaCentrNORECHARGE_SERV]
extends = TestFullAlphaBeta_SERV
description = "TestFullAlphaBetaCentrNORECHARGE_SERV"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeBasic"

# THE COMMUNICATION IS USELESS IN NO SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s  
 

[Config TestFullAlphaBetaCentrANALYTICAL_SERV]
extends = TestFullAlphaBeta_SERV
description = "TestFullAlphaBetaCentrANALYTICAL_SERV"

repeat = 4

*.host[*].udpApp[*].typename = "UDPRechargeAnalytical"


# THE COMMUNICATION IS USELESS IN ANALYTICAL SCHEDULING
**.udpApp[0].sendInterval = truncnormal(1000s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = false
**.host*.mobility.updateInterval = 0s

**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"    
 
**.udpApp[0].analticalLogFile = "${resultdir}/${configname}/${AL}-${BE}-${runnumber}.log"
**.udpApp[0].printAnalticalLog = true 




[Config TestFullAlphaBetaDistrPROBABILISTIC_SERV]
extends = TestFullAlphaBeta_SERV
description = "TestFullAlphaBetaDistrPROBABILISTIC_SERV"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeProbabilistic"

**.udpApp[0].probKnowledgeType  = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"

# THE COMMUNICATION IS USELESS IN PROBABILISTIC SCHEDULING
#**.udpApp[0].sendInterval = truncnormal(${SSI=1000, 1, 1000 ! KN}s, 0.02s)
#**.udpApp[0].activateVirtualForceMovements = ${VFM=false, true, false ! KN}
#**.host*.mobility.updateInterval = ${UPI=0, 100, 0 ! KN}ms
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].useDischargeProbability = false
#**.udpApp[0].chargeSlots = ${PRS=1,2,3} 
**.udpApp[0].chargeSlots = ${PRS=1}

#**.host[*].battery.initialCapacity = ${IC = 50000, 75000, 100000, 125000, 150000}J
**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "${resultdir}/${configname}/${AL}-${BE}-${KN}-${PRS}-${runnumber}"

output-vector-file = ${resultdir}/${configname}/${AL}-${BE}-${KN}-${PRS}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${AL}-${BE}-${KN}-${PRS}-${runnumber}.sca



[Config TestFullAlphaBetaDistrGAMETHEORY_SERV]
extends = TestFullAlphaBeta_SERV
description = "TestFullAlphaBetaDistrGAMETHEORY_SERV"

#repeat = 12

*.host[*].udpApp[*].typename = "UDPRechargeGameTheory"

**.udpApp[0].gameTheoryKnowledgeType = "${KN=GLOBAL_KNOWLEDGE,LOCAL_KNOWLEDGE,PERSONAL_KNOWLEDGE}"
**.udpApp[0].varConstantType = "LINEARINCREASE5"
**.udpApp[0].dischargeProbEnergyToUse = "ENERGYAVG"
**.udpApp[0].dischargeEstimationType = "QUADRATIC_EST"

**.udpApp[0].useGlobalEstimationInLocal = true

**.host[*].battery.initialCapacity = truncnormal(130000J, 1000J)
#**.host[*].battery.initialCapacity = truncnormal(${IC2 = 50000, 75000, 100000, 125000, 150000}J, 1000J)

**.udpApp[0].linearIncreaseFactor = 1.0
**.udpApp[0].constDischargeProb = 1.0
**.udpApp[0].exponential_dischargeProb_decay = 1.0
**.udpApp[0].temp_factorProbDischarge = 2.0
**.udpApp[0].varPConstantType = "NEW7"

**.udpApp[0].useNewGameTheoryDischargeProb = true
**.udpApp[0].useUnoPRprob = false

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].activateVirtualForceMovements = true
**.host*.mobility.updateInterval = 100ms

**.udpApp[0].kappaMeno = 0
**.udpApp[0].kappaPiu = 1

**.udpApp[0].rechargeIsolation = true
**.udpApp[0].useEnergyAtRechargeInDicharging = true
**.udpApp[0].useReverseE = false
**.udpApp[0].coverageUtilityFactor = 0.05

**.udpApp[0].makeCoverageLog = true
**.udpApp[0].makeCoverageMap = false
**.udpApp[0].coverageMapFilename = "${resultdir}/${configname}/${AL}-${BE}-${KN}-${runnumber}"


output-vector-file = ${resultdir}/${configname}/${AL}-${BE}-${KN}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${AL}-${BE}-${KN}-${runnumber}.sca



